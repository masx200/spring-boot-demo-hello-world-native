# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven native image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: wget -O ~/graalvm-jdk-20_linux-x64_bin.tar.gz -v https://download.oracle.com/graalvm/20/latest/graalvm-jdk-20_linux-x64_bin.tar.gz
      - run: |
          mkdir -v ~/graalvm-jdk-20_linux-x64_bin
          tar -v -C ~/graalvm-jdk-20_linux-x64_bin -xzf ~/graalvm-jdk-20_linux-x64_bin.tar.gz


      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: export PATH=~/graalvm-jdk-20_linux-x64_bin/graalvm-jdk-20.0.2+9.1/bin:$PATH
      - run: export JAVA_HOME=~/graalvm-jdk-20_linux-x64_bin/graalvm-jdk-20.0.2+9.1
      - run: |
          sudo apt update
          sudo apt-get install build-essential libz-dev zlib1g-dev
      - name: Build with Maven
        run: |
          mvn package
          mvn spring-boot:process-aot
          
          mvn -Pnative native:build

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
